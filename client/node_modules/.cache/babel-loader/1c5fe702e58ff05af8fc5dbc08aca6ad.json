{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.type\";\nimport { googleprovider, createDocument, auth, getCurrentUser } from \"../../firebase/firebase.utility\";\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure } from \"./user.actions.\";\nexport function* onUserAuthchange(userAuth) {\n  try {\n    const userRef = yield call(createDocument, userAuth);\n    const snapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* userSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield onUserAuthchange(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGooglepop() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleprovider);\n    yield onUserAuthchange(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield onUserAuthchange(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signup({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield onUserAuthchange(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGooglesignin() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGooglepop);\n}\nexport function* onEmailsignin() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUsersession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, userSession);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signup);\n}\nexport function* userSagas() {\n  yield all([call(onGooglesignin), call(onEmailsignin), call(onCheckUsersession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/src/redux/user/user.sagas.js"],"names":["takeLatest","call","put","all","UserActionTypes","googleprovider","createDocument","auth","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","onUserAuthchange","userAuth","userRef","snapShot","get","id","data","error","userSession","signInWithGooglepop","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signup","signOut","onGooglesignin","GOOGLE_SIGN_IN_START","onEmailsignin","EMAIL_SIGN_IN_START","onCheckUsersession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, call, put , all} from 'redux-saga/effects';\r\nimport UserActionTypes from \"./user.type\";\r\nimport{ googleprovider , createDocument , auth , getCurrentUser}from \"../../firebase/firebase.utility\";\r\nimport{  SignInSuccess, SignInFailure , signOutSuccess , signOutFailure} from \"./user.actions.\"\r\n\r\nexport function* onUserAuthchange(userAuth){\r\n    try {\r\nconst userRef = yield call( createDocument ,userAuth);\r\nconst snapShot = yield userRef.get();\r\nyield put(SignInSuccess({\r\n   id : snapShot.id,\r\n    ...snapShot.data()\r\n}))\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* userSession(){\r\n  try {\r\n      const userAuth = yield getCurrentUser();\r\n      if(!userAuth) return;\r\n      yield onUserAuthchange(userAuth);\r\n      \r\n  } catch (error) {\r\n      yield put(SignInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* signInWithGooglepop() {\r\n    try {\r\nconst { user } = yield auth.signInWithPopup(googleprovider);\r\n yield onUserAuthchange(user)\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload :{ email , password}}) {\r\n    try {\r\n    const { user } = yield auth.signInWithEmailAndPassword( email , password);\r\n      yield onUserAuthchange(user)\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\nexport function* signup({payload :{ email , password}}) {\r\n    try {\r\n    const { user } = yield auth.signInWithEmailAndPassword( email , password);\r\n      yield onUserAuthchange(user)\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGooglesignin() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGooglepop\r\n    )\r\n}\r\nexport function* onEmailsignin() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\nexport function* onCheckUsersession() {\r\n    yield takeLatest(\r\n        UserActionTypes.CHECK_USER_SESSION,\r\n        userSession\r\n    )\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signup);\r\n}\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGooglesignin) , call(onEmailsignin) , call(onCheckUsersession) , call(onSignOutStart) , call(onSignUpStart)])\r\n}"]},"metadata":{},"sourceType":"module"}