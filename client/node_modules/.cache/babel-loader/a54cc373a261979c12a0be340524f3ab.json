{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nconst config = {\n  apiKey: \"AIzaSyDdjN2N2JT24RdxT1zVnaMdcHG6zKd7xto\",\n  authDomain: \"crown-db-2a6b9.firebaseapp.com\",\n  projectId: \"crown-db-2a6b9\",\n  storageBucket: \"crown-db-2a6b9.appspot.com\",\n  messagingSenderId: \"998464910088\",\n  appId: \"1:998464910088:web:676130bd233f3def80b2bd\",\n  measurementId: \"G-91KVXY9DN2\"\n};\nexport const createDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAnddocument = (collectionKey, objecttoAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objecttoAdd.forEach(obj => {\n    const newdoc = collectionRef.doc(obj.title);\n    console.log(newdoc);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/src/firebase/firebase.utility.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAnddocument","collectionKey","objecttoAdd","collectionRef","collection","batch","forEach","obj","newdoc","title","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,SAAS,EAAE,gBAHA;AAIXC,EAAAA,aAAa,EAAE,4BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUA,OAAO,MAAMC,cAAc,GAAG,OAAOC,QAAP,EAAkBC,cAAlB,KAAqC;AACjE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAgBC,MAAAA;AAAhB,QAA0BV,QAAhC;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAvBM;AAyBP,OAAO,MAAMgB,wBAAwB,GAAG,CAAEC,aAAF,EAAkBC,WAAlB,KAAkC;AACxE,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,WAAW,CAACI,OAAZ,CAAqBC,GAAG,IAAI;AAC1B,UAAMC,MAAM,GAAGL,aAAa,CAACjB,GAAd,CAAkBqB,GAAG,CAACE,KAAtB,CAAf;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACD,GAHD;AAKD,CATM;AAYPpC,QAAQ,CAACsC,aAAT,CAAuBrC,MAAvB;AAEA,OAAO,MAAMsC,IAAI,GAAGvC,QAAQ,CAACuC,IAAT,EAAb;AACP,OAAO,MAAM1B,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAM2B,QAAQ,GAAG,IAAIxC,QAAQ,CAACuC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAexC,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDdjN2N2JT24RdxT1zVnaMdcHG6zKd7xto\",\r\n    authDomain: \"crown-db-2a6b9.firebaseapp.com\",\r\n    projectId: \"crown-db-2a6b9\",\r\n    storageBucket: \"crown-db-2a6b9.appspot.com\",\r\n    messagingSenderId: \"998464910088\",\r\n    appId: \"1:998464910088:web:676130bd233f3def80b2bd\",\r\n    measurementId: \"G-91KVXY9DN2\"\r\n  };\r\n\r\nexport const createDocument = async (userAuth , additionalData) => {\r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapshot = await userRef.get(); \r\n\r\n  if(!snapshot.exists){\r\n    const { displayName , email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n}\r\n\r\nexport const addCollectionAnddocument = ( collectionKey , objecttoAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey)\r\n   \r\n  const batch = firestore.batch();\r\n  objecttoAdd.forEach( obj => {\r\n    const newdoc = collectionRef.doc(obj.title)\r\n    console.log(newdoc);\r\n  })\r\n  \r\n}\r\n\r\n\r\nfirebase.initializeApp(config);\r\n \r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}