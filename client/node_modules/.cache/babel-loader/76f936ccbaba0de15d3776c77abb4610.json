{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotTomap } from \"../../firebase/firebase.utility\";\nimport { fetchcollectionsuccess, fetchcollectionfailure } from '../shop/shop.action';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollections() {\n  try {\n    const collectionRef = fSirestore.collection('collection');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotTomap, snapshot);\n    yield put(fetchcollectionsuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchcollectionfailure(error.message));\n  }\n}\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/src/redux/shop/shop.saga.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotTomap","fetchcollectionsuccess","fetchcollectionfailure","ShopActionTypes","fetchCollections","collectionRef","fSirestore","collection","snapshot","get","collectionsMap","error","message","onFetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,iCAA3D;AAEA,SACEC,sBADF,EAEEC,sBAFF,QAGO,qBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAMC,aAAa,GAAGC,UAAU,CAACC,UAAX,CAAsB,YAAtB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BG,+BAD+B,EAE/BQ,QAF+B,CAAjC;AAIA,UAAMV,GAAG,CAACG,sBAAsB,CAACS,cAAD,CAAvB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACI,sBAAsB,CAACS,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,uBAAV,GAAoC;AACzC,QAAMjB,UAAU,CAACO,eAAe,CAACW,uBAAjB,EAA0CV,gBAA1C,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotTomap } from \"../../firebase/firebase.utility\";\r\n\r\nimport {\r\n  fetchcollectionsuccess,\r\n  fetchcollectionfailure\r\n} from '../shop/shop.action';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollections() {\r\n  try {\r\n    const collectionRef = fSirestore.collection('collection');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotTomap,\r\n      snapshot\r\n    );\r\n    yield put(fetchcollectionsuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchcollectionfailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onFetchCollectionsStart() {\r\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\r\n}"]},"metadata":{},"sourceType":"module"}