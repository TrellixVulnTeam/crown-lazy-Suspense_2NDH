{"ast":null,"code":"import shopTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotTomap } from \"../../firebase/firebase.utility\";\nexport const fetchcollectionstart = () => ({\n  type: shopTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchcollectionsuccess = collectionsMap => ({\n  type: shopTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchcollectionfailure = errorMsg => ({\n  type: shopTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMsg\n});\nexport const fetchcollectionstartAsync = () => {\n  return dispactch => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispactch(fetchcollectionstart());\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotTomap(snapShot);\n      dispactch(fetchcollectionsuccess(collectionsMap));\n    }).catch(error => dispactch(fetchcollectionfailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/client/src/redux/shop/shop.action.js"],"names":["shopTypes","firestore","convertCollectionsSnapshotTomap","fetchcollectionstart","type","FETCH_COLLECTIONS_START","fetchcollectionsuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchcollectionfailure","errorMsg","FETCH_COLLECTIONS_FAILURE","fetchcollectionstartAsync","dispactch","collectionRef","collection","get","then","snapShot","catch","error","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,iCAA3D;AAEC,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAGJ,SAAS,CAACK;AADwB,CAAP,CAA7B;AAGP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACvDH,EAAAA,IAAI,EAAGJ,SAAS,CAACQ,yBADsC;AAEvDC,EAAAA,OAAO,EAAGF;AAF6C,CAAL,CAA7C;AAIP,OAAO,MAAMG,sBAAsB,GAAGC,QAAQ,KAAK;AACjDP,EAAAA,IAAI,EAAGJ,SAAS,CAACY,yBADgC;AAEjDH,EAAAA,OAAO,EAAGE;AAFuC,CAAL,CAAvC;AAKP,OAAO,MAAME,yBAAyB,GAAE,MAAK;AAC5C,SAAOC,SAAS,IAAI;AAElB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,SAAS,CAACX,oBAAoB,EAArB,CAAT;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMZ,cAAc,GAAIL,+BAA+B,CAACiB,QAAD,CAAvD;AACAL,MAAAA,SAAS,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAT;AACD,KAHD,EAGGa,KAHH,CAGUC,KAAK,IAAIP,SAAS,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAH5B;AAKD,GATD;AAUA,CAXM","sourcesContent":["import shopTypes from \"./shop.types\";\r\nimport { firestore, convertCollectionsSnapshotTomap } from \"../../firebase/firebase.utility\";\r\n\r\n export const fetchcollectionstart = () => ({\r\n   type : shopTypes.FETCH_COLLECTIONS_START\r\n });\r\n export const fetchcollectionsuccess = collectionsMap => ({\r\n   type : shopTypes.FETCH_COLLECTIONS_SUCCESS,\r\n   payload : collectionsMap\r\n })\r\n export const fetchcollectionfailure = errorMsg => ({\r\n   type : shopTypes.FETCH_COLLECTIONS_FAILURE,\r\n   payload : errorMsg\r\n })\r\n\r\n export const fetchcollectionstartAsync =()=> {\r\n  return dispactch => {\r\n\r\n    const collectionRef = firestore.collection(\"collection\");\r\n    dispactch(fetchcollectionstart());\r\n    collectionRef.get().then(snapShot => {\r\n      const collectionsMap =  convertCollectionsSnapshotTomap(snapShot);\r\n      dispactch(fetchcollectionsuccess(collectionsMap));\r\n    }).catch( error => dispactch(fetchcollectionfailure(error.message)))\r\n\r\n  }\r\n }\r\n "]},"metadata":{},"sourceType":"module"}