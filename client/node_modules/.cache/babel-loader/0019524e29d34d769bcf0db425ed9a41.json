{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nconst config = {\n  apiKey: \"AIzaSyDdjN2N2JT24RdxT1zVnaMdcHG6zKd7xto\",\n  authDomain: \"crown-db-2a6b9.firebaseapp.com\",\n  projectId: \"crown-db-2a6b9\",\n  storageBucket: \"crown-db-2a6b9.appspot.com\",\n  messagingSenderId: \"998464910088\",\n  appId: \"1:998464910088:web:676130bd233f3def80b2bd\",\n  measurementId: \"G-91KVXY9DN2\"\n};\nexport const createDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userRef;\n}; // export const addCollectionAnddocument = async ( collectionKey , objecttoAdd) => {\n//   const collectionRef = firestore.collection(collectionKey)\n//   const batch = firestore.batch();\n//   objecttoAdd.forEach( obj => {\n//     const newdoc = collectionRef.doc()\n//     batch.set( newdoc , obj)\n//   })\n//   return await batch.commit()\n// }\n\nexport const convertCollectionsSnapshotTomap = collections => {\n  const transformed = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformed.reduce((previous, collection) => {\n    previous[collection.title.toLowerCase()] = collection;\n    return previous;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new romise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleprovider = new firebase.auth.GoogleAuthProvider();\ngoogleprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleprovider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/src/firebase/firebase.utility.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","convertCollectionsSnapshotTomap","collections","transformed","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","previous","collection","getCurrentUser","romise","resolve","reject","unsubscribe","auth","onAuthStateChanged","initializeApp","googleprovider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDdjN2N2JT24RdxT1zVnaMdcHG6zKd7xto\",\r\n    authDomain: \"crown-db-2a6b9.firebaseapp.com\",\r\n    projectId: \"crown-db-2a6b9\",\r\n    storageBucket: \"crown-db-2a6b9.appspot.com\",\r\n    messagingSenderId: \"998464910088\",\r\n    appId: \"1:998464910088:web:676130bd233f3def80b2bd\",\r\n    measurementId: \"G-91KVXY9DN2\"\r\n  };\r\n\r\nexport const createDocument = async (userAuth , additionalData) => {\r\n  if(!userAuth) return;\r\n \r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapshot = await userRef.get(); \r\n\r\n  if(!snapshot.exists){\r\n    const { displayName , email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n}\r\n\r\n// export const addCollectionAnddocument = async ( collectionKey , objecttoAdd) => {\r\n//   const collectionRef = firestore.collection(collectionKey)\r\n   \r\n//   const batch = firestore.batch();\r\n//   objecttoAdd.forEach( obj => {\r\n//     const newdoc = collectionRef.doc()\r\n//     batch.set( newdoc , obj)\r\n//   })\r\n  \r\n//   return await batch.commit()\r\n// }\r\n\r\n export const convertCollectionsSnapshotTomap = collections => {\r\n  const transformed = collections.docs.map( doc => {\r\n    const { title , items} = doc.data();\r\n\r\n    return{\r\n      routeName : encodeURI(title.toLowerCase()),\r\n      id : doc.id,\r\n      title,\r\n      items\r\n    }\r\n  })\r\n\r\n  return transformed.reduce((previous, collection) => {\r\n    previous[collection.title.toLowerCase()] = collection;\r\n    return previous\r\n  },{});\r\n }\r\n\r\nexport const getCurrentUser = () => {\r\n  return new romise((resolve , reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged(\r\n      userAuth => {\r\n        unsubscribe();\r\n        resolve(userAuth)\r\n      }, reject\r\n    )})\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n \r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n export const googleprovider = new firebase.auth.GoogleAuthProvider();\r\ngoogleprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleprovider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}