{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.type\";\nimport { googleprovider, createDocument, signInWithGoogle, auth, get } from \"../../firebase/firebase.utility\";\nimport { SignInSuccess, SignInFailure } from \"./user.actions.\";\nexport function* onUserAuthchange(userAuth) {\n  try {\n    const userRef = yield call(createDocument, userAuth);\n    const snapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* userSession() {}\nexport function* signInWithGooglepop() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleprovider);\n    yield onUserAuthchange(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield onUserAuthchange(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGooglesignin() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGooglepop);\n}\nexport function* onEmailsignin() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUsersession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, userSession);\n}\nexport function* userSagas() {\n  yield all([call(onGooglesignin), call(onEmailsignin), call(onCheckUsersession)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/src/redux/user/user.sagas.js"],"names":["takeLatest","call","put","all","UserActionTypes","googleprovider","createDocument","signInWithGoogle","auth","get","SignInSuccess","SignInFailure","onUserAuthchange","userAuth","userRef","snapShot","id","data","error","userSession","signInWithGooglepop","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGooglesignin","GOOGLE_SIGN_IN_START","onEmailsignin","EMAIL_SIGN_IN_START","onCheckUsersession","CHECK_USER_SESSION","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAiCC,GAAjC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,cAAR,EAAyBC,cAAzB,EAA0CC,gBAA1C,EAA6DC,IAA7D,EAAoEC,GAApE,QAA6E,iCAA7E;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA4C,iBAA5C;AAEA,OAAO,UAAUC,gBAAV,CAA2BC,QAA3B,EAAoC;AACvC,MAAI;AACR,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAAEK,cAAF,EAAkBO,QAAlB,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACL,GAAR,EAAvB;AACA,UAAMP,GAAG,CAACQ,aAAa,CAAC;AACrBM,MAAAA,EAAE,EAAGD,QAAQ,CAACC,EADO;AAEpB,SAAGD,QAAQ,CAACE,IAAT;AAFiB,KAAD,CAAd,CAAT;AAIK,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACS,aAAa,CAACO,KAAD,CAAd,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,WAAV,GAAuB,CAE7B;AACD,OAAO,UAAUC,mBAAV,GAAgC;AACnC,MAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACc,eAAL,CAAqBjB,cAArB,CAAvB;AACC,UAAMO,gBAAgB,CAACS,IAAD,CAAtB;AACI,GAHD,CAGE,OAAOH,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACS,aAAa,CAACO,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUK,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAAUC,IAAAA;AAAV;AAAV,CAA1B,EAA0D;AAC7D,MAAI;AACJ,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACmB,0BAAL,CAAiCF,KAAjC,EAAyCC,QAAzC,CAAvB;AACE,UAAMd,gBAAgB,CAACS,IAAD,CAAtB;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACS,aAAa,CAACO,KAAD,CAAd,CAAT;AACH;AACJ;AACD,OAAO,UAAUU,cAAV,GAA2B;AAC9B,QAAM5B,UAAU,CACZI,eAAe,CAACyB,oBADJ,EAEZT,mBAFY,CAAhB;AAIH;AACD,OAAO,UAAUU,aAAV,GAA0B;AAC7B,QAAM9B,UAAU,CACZI,eAAe,CAAC2B,mBADJ,EAEZR,eAFY,CAAhB;AAIH;AACD,OAAO,UAAUS,kBAAV,GAA+B;AAClC,QAAMhC,UAAU,CACZI,eAAe,CAAC6B,kBADJ,EAEZd,WAFY,CAAhB;AAIH;AAED,OAAO,UAAUe,SAAV,GAAsB;AACzB,QAAM/B,GAAG,CAAC,CAACF,IAAI,CAAC2B,cAAD,CAAL,EAAwB3B,IAAI,CAAC6B,aAAD,CAA5B,EAA8C7B,IAAI,CAAC+B,kBAAD,CAAlD,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, call, put , all} from 'redux-saga/effects';\r\nimport UserActionTypes from \"./user.type\";\r\nimport{ googleprovider , createDocument , signInWithGoogle , auth , get}from \"../../firebase/firebase.utility\";\r\nimport{  SignInSuccess, SignInFailure} from \"./user.actions.\"\r\n\r\nexport function* onUserAuthchange(userAuth){\r\n    try {\r\nconst userRef = yield call( createDocument ,userAuth);\r\nconst snapShot = yield userRef.get();\r\nyield put(SignInSuccess({\r\n   id : snapShot.id,\r\n    ...snapShot.data()\r\n}))\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* userSession(){\r\n\r\n}\r\nexport function* signInWithGooglepop() {\r\n    try {\r\nconst { user } = yield auth.signInWithPopup(googleprovider);\r\n yield onUserAuthchange(user)\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload :{ email , password}}) {\r\n    try {\r\n    const { user } = yield auth.signInWithEmailAndPassword( email , password);\r\n      yield onUserAuthchange(user)\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\nexport function* onGooglesignin() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGooglepop\r\n    )\r\n}\r\nexport function* onEmailsignin() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\nexport function* onCheckUsersession() {\r\n    yield takeLatest(\r\n        UserActionTypes.CHECK_USER_SESSION,\r\n        userSession\r\n    )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGooglesignin) , call(onEmailsignin) , call(onCheckUsersession)])\r\n}"]},"metadata":{},"sourceType":"module"}