{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.type\";\nimport { googleprovider, createDocument, signInWithGoogle, auth } from \"../../firebase/firebase.utility\";\nimport { signInSuccess, signInFailure } from \"./user.actions.\";\nexport function* getSnapShotfromUserAuth(userAuth) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleprovider);\n    const userRef = yield call(createDocument, user);\n    const snapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGooglepop() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleprovider);\n    yield getSnapShotfromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotfromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGooglesignin() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGooglepop);\n}\nexport function* onEmailsignin() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGooglesignin), call(onEmailsignin)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/src/redux/user/user.sagas.js"],"names":["takeLatest","call","put","all","UserActionTypes","googleprovider","createDocument","signInWithGoogle","auth","signInSuccess","signInFailure","getSnapShotfromUserAuth","userAuth","user","signInWithPopup","userRef","snapShot","get","id","data","error","signInWithGooglepop","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGooglesignin","GOOGLE_SIGN_IN_START","onEmailsignin","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAiCC,GAAjC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,cAAR,EAAyBC,cAAzB,EAA0CC,gBAA1C,EAA6DC,IAA7D,QAAuE,iCAAvE;AACA,SAAQC,aAAR,EAAwBC,aAAxB,QAA4C,iBAA5C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAC/C,MAAI;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACM,eAAL,CAAqBT,cAArB,CAAvB;AACA,UAAMU,OAAO,GAAG,MAAMd,IAAI,CAAEK,cAAF,EAAmBO,IAAnB,CAA1B;AACA,UAAMG,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMf,GAAG,CAACO,aAAa,CAAC;AACrBS,MAAAA,EAAE,EAAGF,QAAQ,CAACE,EADO;AAEpB,SAAGF,QAAQ,CAACG,IAAT;AAFiB,KAAD,CAAd,CAAT;AAIK,GARF,CAQG,OAAOC,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAID,OAAO,UAAUC,mBAAV,GAAgC;AACnC,MAAI;AACR,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACM,eAAL,CAAqBT,cAArB,CAAvB;AACC,UAAMM,uBAAuB,CAACE,IAAD,CAA7B;AACI,GAHD,CAIA,OAAOO,KAAP,EAAc;AACV,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAAUC,IAAAA;AAAV;AAAV,CAA1B,EAA0D;AAC7D,MAAI;AACJ,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACkB,0BAAL,CAAiCF,KAAjC,EAAyCC,QAAzC,CAAvB;AACH,UAAMd,uBAAuB,CAACE,IAAD,CAA7B;AAAqC,GAFlC,CAGH,OAAOO,KAAP,EAAc;AACP,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAGD,OAAO,UAAUO,cAAV,GAA2B;AAC9B,QAAM3B,UAAU,CACZI,eAAe,CAACwB,oBADJ,EAEZP,mBAFY,CAAhB;AAIH;AACD,OAAO,UAAUQ,aAAV,GAA0B;AAC7B,QAAM7B,UAAU,CACZI,eAAe,CAAC0B,mBADJ,EAEZR,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACF,IAAI,CAAC0B,cAAD,CAAL,EAAwB1B,IAAI,CAAC4B,aAAD,CAA5B,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, call, put , all} from 'redux-saga/effects';\r\nimport UserActionTypes from \"./user.type\";\r\nimport{ googleprovider , createDocument , signInWithGoogle , auth}from \"../../firebase/firebase.utility\";\r\nimport{ signInSuccess , signInFailure} from \"./user.actions.\"\r\n\r\nexport function* getSnapShotfromUserAuth(userAuth){\r\n   try {\r\nconst { user } = yield auth.signInWithPopup(googleprovider)\r\nconst userRef = yield call( createDocument , user);\r\nconst snapShot = yield userRef.get();\r\nyield put(signInSuccess({\r\n   id : snapShot.id,\r\n    ...snapShot.data()\r\n}))\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* signInWithGooglepop() {\r\n    try {\r\nconst { user } = yield auth.signInWithPopup(googleprovider)\r\n yield getSnapShotfromUserAuth(user)\r\n    }\r\n    catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload :{ email , password}}) {\r\n    try {\r\n    const { user } = yield auth.signInWithEmailAndPassword( email , password);\r\n yield getSnapShotfromUserAuth(user) }\r\n catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* onGooglesignin() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGooglepop\r\n    )\r\n}\r\nexport function* onEmailsignin() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGooglesignin) , call(onEmailsignin)])\r\n}"]},"metadata":{},"sourceType":"module"}