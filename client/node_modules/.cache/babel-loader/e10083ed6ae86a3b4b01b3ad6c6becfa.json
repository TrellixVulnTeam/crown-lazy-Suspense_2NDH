{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\web development\\\\Barcel1\\\\barcel1\\\\src\\\\pages\\\\shoppages\\\\shoppage.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Shopextent from '../../components/shopext/shopextent';\nimport './shoppage.scss';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectisCollection, SelectisCollectionLoading } from '../../redux/shop/shop.selector';\nimport { fetchcollectionstart } from '../../redux/shop/shop.action';\nimport CollectionPage from '../collection/collectionpreview';\nimport WithSpinner from \"../../components/withspinner/withSpinner\"; // import { ShopPageContainer } from './shoppage.styled';\n// import CollectionMap from \"../../redux/shop/shop.action\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WithSpinnerCollectionpage = WithSpinner(CollectionPage);\n_c = WithSpinnerCollectionpage;\nconst WithSpinnerShoppage = WithSpinner(Shopextent);\n_c2 = WithSpinnerShoppage;\n\nclass Shoppage {\n  componentDidMount() {\n    const {\n      fetchcollectionstart\n    } = this.props;\n    fetchcollectionstart();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      CollectionLoading\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shoppage\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(WithSpinnerShoppage, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(WithSpinnerCollectionpage, {\n          isLoading: !CollectionLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectisCollection,\n  CollectionLoading: SelectisCollectionLoading\n}); // const mapDispatchToProps = dispatch => ({\n//    CollectionMap: collection => dispatch(CollectionMap(collection))\n//  });\n\nconst mapDispatchToProps = dispatch => ({\n  fetchcollectionstart: () => dispatch(fetchcollectionstart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shoppage); //  import React from 'react';\n// import { Route } from 'react-router-dom';\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n// import CollectionPage from '../collection/collection.component';\n// const ShopPage = ({ match }) => (\n//   <div className='shop-page'>\n//     <Route exact path={`${match.path}`} component={CollectionsOverview} />\n//     <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n//   </div>\n// );\n// export default ShopPage;\n// const WithSpinnerCollectionpage = WithSpinner(CollectionPage);\n// const WithSpinnerShoppage = WithSpinner(Shopextent);\n// class Shoppage extends Component {\n//  componentDidMount(){\n//     const { fetchcollectionstartAsync } = this.props\n//     fetchcollectionstartAsync()\n//  }\n//    render(){\n//       const { match, isCollectionFetching ,CollectionLoading  } = this.props;\n//    return  (\n//       <div className=\"shoppage\">\n//       <Route exact path={`${match.path}`} \n//        render={ (props) => <WithSpinnerShoppage isLoading={isCollectionFetching} {...props}/>}/>\n//     <Route path={`${match.path}/:collectionId`} \n//     render={ (props) => <WithSpinnerCollectionpage isLoading={!CollectionLoading} {...props} />} />\n//          </div>\n//        )\n//    }\n// }\n// const mapStateToProps = createStructuredSelector({\n//    isCollectionFetching : selectisCollection,\n//    CollectionLoading  : SelectisCollectionLoading\n// })\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WithSpinnerCollectionpage\");\n$RefreshReg$(_c2, \"WithSpinnerShoppage\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/web development/Barcel1/barcel1/src/pages/shoppages/shoppage.jsx"],"names":["React","useEffect","Route","Shopextent","connect","createStructuredSelector","selectisCollection","SelectisCollectionLoading","fetchcollectionstart","CollectionPage","WithSpinner","WithSpinnerCollectionpage","WithSpinnerShoppage","Shoppage","componentDidMount","props","render","match","isCollectionFetching","CollectionLoading","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAO,iBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAAUC,kBAAV,EAA+BC,yBAA/B,QAAgE,gCAAhE;AACA,SAASC,oBAAT,QAAqC,8BAArC;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,0CAAxB,C,CACA;AACA;;;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACD,cAAD,CAA7C;KAAME,yB;AACN,MAAMC,mBAAmB,GAAGF,WAAW,CAACP,UAAD,CAAvC;MAAMS,mB;;AAGN,MAAMC,QAAN,CAAc;AAGbC,EAAAA,iBAAiB,GAAE;AAChB,UAAM;AAAEN,MAAAA;AAAF,QAA2B,KAAKO,KAAtC;AACAP,IAAAA,oBAAoB;AAEtB;;AAECQ,EAAAA,MAAM,GAAE;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AACH,wBACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AACC,QAAA,MAAM,EAAIL,KAAD,iBAAW,QAAC,mBAAD;AAAqB,UAAA,SAAS,EAAEG,oBAAhC;AAAA,aAA0DH;AAA1D;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,cADA,eAGF,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AACA,QAAA,MAAM,EAAIL,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACI,iBAAvC;AAAA,aAA8DJ;AAA9D;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,cAHE;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAQC;;AAnBU;;AAqBd,MAAMM,eAAe,GAAGhB,wBAAwB,CAAC;AAC9Ca,EAAAA,oBAAoB,EAAGZ,kBADuB;AAE9Ca,EAAAA,iBAAiB,EAAIZ;AAFyB,CAAD,CAAhD,C,CAKA;AACA;AACA;;AACA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACrCf,EAAAA,oBAAoB,EAAG,MAAMe,QAAQ,CAACf,oBAAoB,EAArB;AADA,CAAL,CAAnC;;AAIC,eAAeJ,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf,C,CAYD;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React , { useEffect} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Shopextent from '../../components/shopext/shopextent';\r\nimport './shoppage.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {  selectisCollection , SelectisCollectionLoading } from '../../redux/shop/shop.selector';\r\nimport { fetchcollectionstart } from '../../redux/shop/shop.action';\r\n\r\nimport CollectionPage from '../collection/collectionpreview';\r\nimport WithSpinner from \"../../components/withspinner/withSpinner\";\r\n// import { ShopPageContainer } from './shoppage.styled';\r\n// import CollectionMap from \"../../redux/shop/shop.action\"\r\n\r\nconst WithSpinnerCollectionpage = WithSpinner(CollectionPage);\r\nconst WithSpinnerShoppage = WithSpinner(Shopextent);\r\n\r\n\r\nclass Shoppage{\r\n    \r\n\r\n componentDidMount(){\r\n    const { fetchcollectionstart } = this.props\r\n    fetchcollectionstart()\r\n\r\n }\r\n\r\n   render(){\r\n      const { match, isCollectionFetching ,CollectionLoading  } = this.props;\r\n   return  (\r\n      <div className=\"shoppage\">\r\n      <Route exact path={`${match.path}`} \r\n       render={ (props) => <WithSpinnerShoppage isLoading={isCollectionFetching} {...props}/>}/>\r\n    <Route path={`${match.path}/:collectionId`} \r\n    render={ (props) => <WithSpinnerCollectionpage isLoading={!CollectionLoading} {...props} />} />\r\n         </div>\r\n       )\r\n   }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n   isCollectionFetching : selectisCollection,\r\n   CollectionLoading  : SelectisCollectionLoading\r\n})\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//    CollectionMap: collection => dispatch(CollectionMap(collection))\r\n//  });\r\nconst mapDispatchToProps = dispatch => ({\r\n   fetchcollectionstart : () => dispatch(fetchcollectionstart())\r\n });\r\n\r\n export default connect(mapStateToProps ,mapDispatchToProps)(Shoppage);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  import React from 'react';\r\n// import { Route } from 'react-router-dom';\r\n\r\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\n// import CollectionPage from '../collection/collection.component';\r\n\r\n// const ShopPage = ({ match }) => (\r\n//   <div className='shop-page'>\r\n//     <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n//     <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n//   </div>\r\n// );\r\n\r\n// export default ShopPage;\r\n    \r\n// const WithSpinnerCollectionpage = WithSpinner(CollectionPage);\r\n// const WithSpinnerShoppage = WithSpinner(Shopextent);\r\n\r\n\r\n// class Shoppage extends Component {\r\n    \r\n\r\n//  componentDidMount(){\r\n//     const { fetchcollectionstartAsync } = this.props\r\n//     fetchcollectionstartAsync()\r\n\r\n//  }\r\n\r\n//    render(){\r\n//       const { match, isCollectionFetching ,CollectionLoading  } = this.props;\r\n//    return  (\r\n//       <div className=\"shoppage\">\r\n//       <Route exact path={`${match.path}`} \r\n//        render={ (props) => <WithSpinnerShoppage isLoading={isCollectionFetching} {...props}/>}/>\r\n//     <Route path={`${match.path}/:collectionId`} \r\n//     render={ (props) => <WithSpinnerCollectionpage isLoading={!CollectionLoading} {...props} />} />\r\n//          </div>\r\n//        )\r\n//    }\r\n// }\r\n// const mapStateToProps = createStructuredSelector({\r\n//    isCollectionFetching : selectisCollection,\r\n//    CollectionLoading  : SelectisCollectionLoading\r\n// })"]},"metadata":{},"sourceType":"module"}